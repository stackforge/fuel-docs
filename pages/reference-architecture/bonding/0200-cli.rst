An Example of NIC Aggregation using Fuel CLI tools
--------------------------------------------------

Suppose you have a node with 4 NICs and you want to bond two of them with LACP
enabled ("eth2" and "eth3" here) and then assign Private and Storage networks
to them. The Admin network uses a dedicated NIC ("eth0"). The Management and
Public networks use the last NIC ("eth1").

To create bonding interface using Open vSwitch, do the following:

* Create a separate OVS bridge "br-bondnew" instead of "br-eth2" and "br-eth3".
* Connect "eth2" and "eth3" to "br-bondnew" as a bonded port with property
  "lacp=active".
* Connect "br-prv" and "br-storage" bridges to "br-bondnew" by OVS patches.
* Leave all of the other things unchanged.

See the example of `OVS network scheme <https://raw.githubusercontent.com/stackforge/fuel-docs/master/examples/bonding_ovs_network_scheme.yaml>`_ section in the node configuration.

If you are going to use Linux native bonding, follow these steps:

* Create a new interface "bondnew" instead of "br-eth2" and "br-eth3".
* Connect "eth2" and "eth3" to "bondnew" as a bonded port.
* Add 'provider': 'lnx' to choose Linux native mode.
* Add properties as a hash instead of an array used in ovs mode. Properties are same as options used
  during the bonding kernel modules loading. You should provide which mode this bonding interface should use. Any other
  options are not mandatory. You can find all these options in the Linux Kernel Documentation.

  'properties':
    'mode': 1

* Connect "br-prv" and "br-storage" bridges to "br-bondnew" by OVS patches.
* Leave all of the other things unchanged.

See the example `Linux network scheme <https://raw.githubusercontent.com/stackforge/fuel-docs/master/examples/bonding_lnx_network_scheme.yaml>`_.
