.. _mg-sahara:

Sahara
------

Sahara is the OpenStack Data processing service. Sahara performs two
types of activities in OpenStack:

* Hadoop cluster provisioning
* Executing Elastic Data Processing (EDP) jobs

Sahara runs as a single process service on each controller in MOS
6.x. This, however, will change in MOS 7.x.

**Process checks**

.. list-table::
   :header-rows: 1
   :widths: 20 20 20 20 20
   :stub-columns: 0
   :class: borderless

   * - Process name
     - Incoming connections
     - Role
     - Dependencies
     - HA mode

   * - sahara-all
     - HTTP 8386
     - controller
     - db
     - active/active

**API checks**

Check the proper functioning of the API with a read operation. For
example:

* list provisioning plugins

  * GET /v1.1/<tenant-id>/plugins

|
| **Collected Metrics for Cluster related activities**
188743
.. list-table::
   :header-rows: 1
   :widths: 20 20 20
   :stub-columns: 0
   :class: borderless

   * - Metrics
     - Source
     - Purpose

   * - Total number of Sahara clusters in ``Active`` state
     - poll SQL:

       select count(*) from clusters where status="Active";
     - diag

   * - Total number of Sahara clusters in ``Error`` state
     - poll SQL:

       select count(*) from clusters where status="Error";
     - Alert:

       Too many clusters in ``Error`` state may be a sign of the
       provisioning engine failure or failures in other OpenStack
       services.

   * - Total number of Sahara clusters doing provisioning at the
       moment
     - poll SQL:

       select count(*) from clusters where status not in ("Active",
       "Error");
     - Alert:

       Too many clusters in provisioning state may be a sign of a
       slow network throughput or even missing network connectivity
       between VMs.

       It may also be a sign of a corrupted image being used for the
       clusters.

   * - Total number of VMs used in Sahara clusters
     - poll SQL

       select count(*) from instances;
     - diag

   * - Total number of Cinder Volumes attached to Sahara VMs
     - poll SQL (cross project)

       select count(*) from cinder.volumes where instance_uuid in
       (select instance_id from sahara.instances) and
       attach_status="attached";
     - diag

   * - Total number of Security Group Rules generated by Sahara
     - poll SQL (neutron)

       select count(*) from neutron.securitygrouprules where
       security_group_id in (select id from neutron.securitygroups
       where description LIKE "%Auto security group created by
       Sahara%");
     - diag

   * - Total number of Floating IPs attached to Sahara VMs
     - poll SQL:

       select count(*) from instances where management_ip is not
       NULL;
     - diag

   * - Total number of Glance Images uploaded for Sahara clusters
     - poll SQL (glance):

       select count(*) from glance.image_properties where
       name="_sahara_username" and deleted=0;
     - diag

**Collected Metrics for Elastic Data Processing (EDP) related activities**

.. list-table::
   :header-rows: 1
   :widths: 20 20 20
   :stub-columns: 0
   :class: borderless

   * - Metrics
     - Source
     - Purpose

   * - Total number of EDP jobs that have finished successfully
     - poll SQL:

       select count(*) from job_executions where info like
       '%"status": "SUCCEEDED"%';
     - diag

   * - Total number of EDP jobs that have failed
     - poll SQL:

       select count(*) from sahara.job_executions where info like
       '%"status": "KILLED"%' or info like '%"status": "Error"%';
     - Alert:

       Too many errors in EDP may be a sign of deeper problems.

   * - Total number of EDP jobs that are running at the moment
     - poll SQL:

       select count(*) from sahara.job_executions where not info like
       '%"status": "KILLED"%' and not info like '%"status": "Error"%'
       and not info like '%"status": "SUCCEEDED"%';
     - diag
