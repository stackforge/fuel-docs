adv_net_template:
# default - is the name of the node network group. If you have additional
# node network groups, add descriptions with all parameters for all node
# network group.
# If parameters of additional node network groups are not described in this
# template, parameters of the default node network group apply.
  default:
    nic_mapping:
# NIC mapping for nodes in this node network group. The default section will
# be used for all nodes unless they are specifically configured. You can
# specify mapping for every node by the node name
      default:
# Specify aliases for network interfaces, such as eth0, and
# sub-interfaces (VLANs), such as eth0.101 to
# later use them in the transformation section.
        adm: eth0
        pub: eth1
        man: eth4
        priv: eth2
        stor: eth3
    templates_for_node_role:
# Specify templates for each type of node (node role), such as controller,
# compute, storage, and so on. The order of templates
# is important. For example, if you create a bond in one template and later
# use it in the other template, you must place the template in which you
# created the bond before the other template, so that the bond is created
# before it is referenced in the other template.
        controller:
          - public
          - private
          - storage
          - common
        compute:
          - common
          - private
          - storage
        cinder:
          - common
          - storage
        ceph-osd:
          - common
          - storage
    network_assignments:
# Specify an endpoint for each network, if you add additional custom networks,
# add endpoints for these networks as well.
        storage:
          ep: br-storage
        private:
          ep: br-prv
        public:
          ep: br-ex
        management:
          ep: br-mgmt
        fuelweb_admin:
          ep: br-fw-admin
    network_scheme:
# Describe the network scheme for all node roles.
# - transformations - describe actions required to create a network.
#   For service networks, such as Storage, Management, and Admin,
#   create a Linux bridge. For workload networks that
#   communicated with the OpenStack Networking service, such as
#   Private and Public service, create an Open vSwitch (OVS),
#   a Linux Bridge, a patch that connects the OVS with the Linux
#   bridge, and a port.
#   Available commands:
#
#   * ``add-br`` - creates a bridge. By default, creates a Linux
#     bridge.
#
#   * ``add-port`` - creates a port that connects a Linux bridge with a
#     physical network interface.
#
#   * ``add-patch`` - connects two network bridges. All networks that
#     serve traffic to the control plane must have a patch that connects
#     the OVS bridge and the Linux bridge.
#
#   * ``add-bond`` - add a network interface bonding for high workload
#     networks to increase performance and provide high availability.
#
#   For more information about the properties that you can specify, see
#   the Fuel User Guide: http://docs.openstack.org/developer/fuel-docs.html.
#
# - endpoints - specify the list of logical endpoints for the networks
#   that you have defined in the network_assignments section.
#
# - roles - map network traffic (network roles) to logical endpoints in the
#   <type_of_traffic>: <endpoint> format. The list of network roles is
#   available in the nailgun/nailgun/fixtures/openstack.yaml file.
#   Any type of traffic must be mentioned in the whole node network
#   group just once, therefore, do not repeat any type of traffic in multiple
#   entries. Otherwise, a network
#   conflict may occur. The roles section cannot be empty. If you do not
#   want to specify any type of traffic, create a fake mapping. For example:
#     roles:
#       fake/ext: br-pub-ext
#
#   Plugins may have additional types of traffic. For more information, see
#   plugin documentation.
#
      storage:
        transformations:
          - action: add-br
            name: br-storage
          - action: add-port
            bridge: br-storage
            name: <% stor %>.1001
        endpoints:
          - br-storage
        roles:
          cinder/iscsi: br-storage
          swift/replication: br-storage
          ceph/replication: br-storage
          storage: br-storage
      private:
        transformations:
          - action: add-br
            name: br-prv
            provider: ovs
          - action: add-br
            name: br-aux
          - action: add-patch
            bridges:
            - br-prv
            - br-aux
            provider: ovs
            mtu: 65000
          - action: add-port
            bridge: br-aux
            name: <% priv %>
        endpoints:
          - br-prv
        roles:
          neutron/private: br-prv
      public:
        transformations:
          - action: add-br
            name: br-ex
          - action: add-br
            name: br-floating
            provider: ovs
          - action: add-patch
            bridges:
            - br-floating
            - br-ex
            provider: ovs
            mtu: 65000
          - action: add-port
            bridge: br-ex
            name: <% pub %>
        endpoints:
          - br-ex
        roles:
          public/vip: br-ex
          neutron/floating: br-floating
          ceph/radosgw: br-ex
          ex: br-ex
      common:
# In this example, the common template is created for Management and
# Admin networks.
        transformations:
          - action: add-br
            name: br-fw-admin
          - action: add-port
            bridge: br-fw-admin
            name: <% adm %>
          - action: add-br
            name: br-mgmt
          - action: add-port
            bridge: br-mgmt
            name: <% man %>
        endpoints:
          - br-fw-admin
          - br-mgmt
        roles:
          admin/pxe: br-fw-admin
          fw-admin: br-fw-admin
          mongo/db: br-mgmt
          management: br-mgmt
          keystone/api: br-mgmt
          neutron/api: br-mgmt
          neutron/mesh: br-mgmt
          swift/api: br-mgmt
          sahara/api: br-mgmt
          ceilometer/api: br-mgmt
          cinder/api: br-mgmt
          glance/api: br-mgmt
          heat/api: br-mgmt
          nova/api: br-mgmt
          nova/migration: br-mgmt
          murano/api: br-mgmt
          horizon: br-mgmt
          mgmt/api: br-mgmt
          mgmt/memcache: br-mgmt
          mgmt/database: br-mgmt
          mgmt/messaging: br-mgmt
          mgmt/corosync: br-mgmt
          mgmt/vip: br-mgmt
          mgmt/api: br-mgmt
          ceph/public: br-mgmt
